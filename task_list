LARGE_UINT refactoring and new features
 * int get_bit_from_large_uint(large_uint a, uint32_t b);
 * large_uint get_bitmast_lower_n_bits_set(uin32_t n) -> returns 0x00000...11111 like mask 
 * implement implement multiplication and division (returning quotient and remainder) function for large_uint, using left_shift and right_shift operations

VAR_INT and VAR_UINT
 * build serialize_var_uint64 and deserialize_var_int64, with a layout similar to that of protobuf, to build VAR_INT and VAR_UINT on top of them in TupleIndexer, use get_min_bit_count_uintX/intX functionality to store only that many bits
 * also implement get_byte_count_for_serial_var_int64 and get_byte_count_for_serial_var_uint64, to get number of bytes in their serialized format
